# 应用服务 WEB 访问端口
server:
  port: 9096
spring:
  application:
    name: gateway-01
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        service: gateway-01
        password: nacos
        username: nacos
        port: 9096
    gateway:
      # 跨域配置
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有路径
            allowedOrigins: "*"  # 允许所有来源域
            # 允许来源域的请求方法
            allowedMethods: "GET, POST, PUT, DELETE"
            allowedHeaders: "*"  # 允许所有请求头部
            maxAge: 3600   # 预检请求的最大缓存时间为3600秒
#      discovery:
#        locator:  # 配置服务发现的定位器
#          enabled: true # 启用nacos动态路由, 允许从Nacos注册中心动态获取路由信息
      #
      routes:
        - id: order-service # 路由规则的唯一标识 可以在配置中引用
          uri: lb://order-service # 目标URI 请求将被转发到名为order-service的负载均衡后端服务
          predicates:
            - Path=/order-service/** # 当请求的路径匹配"/ord/**"时,应用该路由规则
#            - Method=GET  # 当请求方法为GET时 可以应用该路由规则
            - Host=example.com, localhost** # 当请求的主机名为"example.com/localhost**"时,应用该路由规则
            # Header断言 基于请求头信息进行路由,可以根据请求头内容决定路由到哪个后端服务
            - Header=X-Requested-With, XMLHttpRequest  # 当请求头中包含"X-Requested-With"并且值为"XMLHttpRequest"时,应用该路由规则
            # Query断言 根据请求的查询参数进行路由, 能够根据请求中的查询参数来路由请求
            - Query=param, value # 当请求的查询参数中包含名为"param"的参数,且值为"value"时,应用这个路由规则
            # 使用自定义断言
            - CustomHeader=myCustomHeader
          filters:
            # StripPrefix过滤器,用于重写请求路径, 通常用于去掉请求路径的前缀,以便请求路由到不同的目标URI; 允许请求路由到正确的后端服务中
            - StripPrefix=1 # 从请求路径中删除一个前缀
            # AddRequestHeader该过滤器 用于在请求中添加头信息, 可以将多个自定义头信息添加到请求中; 对于需要向请求添加额外信息的场景非常有用
            - AddRequestHeader=X-Custom-Header, Custom-Value
            # AddResponseHeader在响应中添加头信息
            - AddResponseHeader=X-Custom-Header, Custom-Value
            # RewritePath 重写请求路径, 方便请求路由到不同的目标URI
            - RewritePath=/order/(?<segment>.*), /new-path/$\{segment}  # 将所有匹配路径的请求的路径中的/order/替换为/new-path/